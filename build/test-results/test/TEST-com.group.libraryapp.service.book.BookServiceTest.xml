<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.group.libraryapp.service.book.BookServiceTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2023-08-20T08:17:05" hostname="BI-2308005-01" time="0.245">
  <properties/>
  <testcase name="책 대출이 정상 동작한다" classname="com.group.libraryapp.service.book.BookServiceTest" time="0.204"/>
  <testcase name="책이 이미 대출되어 있다면, 신규 대출이 실패한다." classname="com.group.libraryapp.service.book.BookServiceTest" time="0.011"/>
  <testcase name="책 반납이 정상 동작한다" classname="com.group.libraryapp.service.book.BookServiceTest" time="0.017"/>
  <testcase name="책 등록이 정상 동작한다" classname="com.group.libraryapp.service.book.BookServiceTest" time="0.007"/>
  <system-out><![CDATA[2023-08-20 17:17:05.293  INFO 480 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.group.libraryapp.service.book.BookServiceTest], using SpringBootContextLoader
2023-08-20 17:17:05.293  INFO 480 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.group.libraryapp.service.book.BookServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2023-08-20 17:17:05.293  INFO 480 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.group.libraryapp.service.book.BookServiceTest]: BookServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-08-20 17:17:05.300  INFO 480 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.group.libraryapp.LibraryAppApplication for test class com.group.libraryapp.service.book.BookServiceTest
2023-08-20 17:17:05.301  INFO 480 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2023-08-20 17:17:05.301  INFO 480 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5eb89000, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@16b1b213, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@77f1026e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1df8c7f4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@75a6cdb, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1ce07709, org.springframework.test.context.transaction.TransactionalTestExecutionListener@637de489, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@38614875, org.springframework.test.context.event.EventPublishingTestExecutionListener@6c09d716, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@734eada1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7f9b46ed, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d0b8b8b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6f18445b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@69bdcfbc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4cb45048]
Hibernate: 
    insert 
    into
        book
        (id, name) 
    values
        (default, ?)
Hibernate: 
    insert 
    into
        user
        (id, age, name) 
    values
        (default, ?, ?)
Hibernate: 
    select
        book0_.id as id1_0_,
        book0_.name as name2_0_ 
    from
        book book0_ 
    where
        book0_.name=?
Hibernate: 
    select
        userloadhi0_.id as id1_2_,
        userloadhi0_.book_name as book_nam2_2_,
        userloadhi0_.is_return as is_retur3_2_,
        userloadhi0_.user_id as user_id4_2_ 
    from
        user_load_history userloadhi0_ 
    where
        userloadhi0_.book_name=? 
        and userloadhi0_.is_return=?
Hibernate: 
    select
        user0_.id as id1_1_,
        user0_.age as age2_1_,
        user0_.name as name3_1_ 
    from
        user user0_ 
    where
        user0_.name=?
Hibernate: 
    insert 
    into
        user_load_history
        (id, book_name, is_return, user_id) 
    values
        (default, ?, ?, ?)
Hibernate: 
    select
        userloadhi0_.id as id1_2_,
        userloadhi0_.book_name as book_nam2_2_,
        userloadhi0_.is_return as is_retur3_2_,
        userloadhi0_.user_id as user_id4_2_ 
    from
        user_load_history userloadhi0_
Hibernate: 
    select
        user0_.id as id1_1_0_,
        user0_.age as age2_1_0_,
        user0_.name as name3_1_0_ 
    from
        user user0_ 
    where
        user0_.id=?
Hibernate: 
    delete 
    from
        book
Hibernate: 
    delete 
    from
        user_load_history
Hibernate: 
    delete 
    from
        user
Hibernate: 
    insert 
    into
        book
        (id, name) 
    values
        (default, ?)
Hibernate: 
    insert 
    into
        user
        (id, age, name) 
    values
        (default, ?, ?)
Hibernate: 
    insert 
    into
        user_load_history
        (id, book_name, is_return, user_id) 
    values
        (default, ?, ?, ?)
Hibernate: 
    select
        book0_.id as id1_0_,
        book0_.name as name2_0_ 
    from
        book book0_ 
    where
        book0_.name=?
Hibernate: 
    select
        userloadhi0_.id as id1_2_,
        userloadhi0_.book_name as book_nam2_2_,
        userloadhi0_.is_return as is_retur3_2_,
        userloadhi0_.user_id as user_id4_2_ 
    from
        user_load_history userloadhi0_ 
    where
        userloadhi0_.book_name=? 
        and userloadhi0_.is_return=?
Hibernate: 
    select
        user0_.id as id1_1_0_,
        user0_.age as age2_1_0_,
        user0_.name as name3_1_0_ 
    from
        user user0_ 
    where
        user0_.id=?
Hibernate: 
    delete 
    from
        book
Hibernate: 
    delete 
    from
        user_load_history
Hibernate: 
    delete 
    from
        user
Hibernate: 
    insert 
    into
        book
        (id, name) 
    values
        (default, ?)
Hibernate: 
    insert 
    into
        user
        (id, age, name) 
    values
        (default, ?, ?)
Hibernate: 
    insert 
    into
        user_load_history
        (id, book_name, is_return, user_id) 
    values
        (default, ?, ?, ?)
Hibernate: 
    select
        user0_.id as id1_1_,
        user0_.age as age2_1_,
        user0_.name as name3_1_ 
    from
        user user0_ 
    where
        user0_.name=?
Hibernate: 
    select
        userloanhi0_.user_id as user_id4_2_0_,
        userloanhi0_.id as id1_2_0_,
        userloanhi0_.id as id1_2_1_,
        userloanhi0_.book_name as book_nam2_2_1_,
        userloanhi0_.is_return as is_retur3_2_1_,
        userloanhi0_.user_id as user_id4_2_1_ 
    from
        user_load_history userloanhi0_ 
    where
        userloanhi0_.user_id=?
Hibernate: 
    update
        user_load_history 
    set
        book_name=?,
        is_return=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        userloadhi0_.id as id1_2_,
        userloadhi0_.book_name as book_nam2_2_,
        userloadhi0_.is_return as is_retur3_2_,
        userloadhi0_.user_id as user_id4_2_ 
    from
        user_load_history userloadhi0_
Hibernate: 
    select
        user0_.id as id1_1_0_,
        user0_.age as age2_1_0_,
        user0_.name as name3_1_0_ 
    from
        user user0_ 
    where
        user0_.id=?
Hibernate: 
    delete 
    from
        book
Hibernate: 
    delete 
    from
        user_load_history
Hibernate: 
    delete 
    from
        user
Hibernate: 
    insert 
    into
        book
        (id, name) 
    values
        (default, ?)
Hibernate: 
    select
        book0_.id as id1_0_,
        book0_.name as name2_0_ 
    from
        book book0_
Hibernate: 
    delete 
    from
        book
Hibernate: 
    delete 
    from
        user_load_history
Hibernate: 
    delete 
    from
        user
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
